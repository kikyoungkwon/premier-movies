// Top-level build file where you can add configuration options common to all sub-projects/modules.

ext {
    compileSdkVersion = 28
    minSdkVersion = 21
    targetSdkVersion = 28
}

buildscript {
    ext {
        versions = [
            kotlin : "1.3.50",
            koin : "2.0.1",
            androidx_lifecycle : "2.2.0-alpha01",
            androidx_nav : "2.0.0",
            androidx_test : "1.1.1",
            androidx_test_ext : "1.1.0",
            androidx_espresso : "3.1.1",
            androidx_appcompat : "1.0.2",
            androidx_fragment : "1.0.0",
            androidx_recyclerview : "1.0.0",
            androidx_constraintlayout : "1.1.3",
            androidx_core_ktx : "1.0.2",
            androidx_fragment_testing : "1.1.0-alpha07",
            androidx_uiautomator : "2.2.0",
            coroutines : "1.3.0",
            retrofit2 : "2.6.0",
            okhttp3 : "4.0.0",
            okhttp3_idling_resource : "1.0.0",
            glide : "4.9.0",
            timber : "4.7.1",
            leakcanary : "2.0-alpha-2",
            junit : "4.12",
            robolectric : "4.3-alpha-2",
            arch_core_testing : "1.1.1",
            mockwebserver : "4.0.0",
            kotlin_test_junit : "1.3.21",
            mockk : "1.9.2"
        ]

        libs = [
            // Support
            androidx_lifecycle_viewmodel : "androidx.lifecycle:lifecycle-viewmodel:${versions.androidx_lifecycle}",
            androidx_lifecycle_extensions : "androidx.lifecycle:lifecycle-extensions:${versions.androidx_lifecycle}",
            androidx_core_ktx : "androidx.core:core-ktx:${versions.androidx_core_ktx}",
            androidx_navigation_fragment : "androidx.navigation:navigation-fragment:${versions.androidx_nav}",
            androidx_navigation_ui : "androidx.navigation:navigation-ui:${versions.androidx_nav}",
            androidx_constraintlayout : "androidx.constraintlayout:constraintlayout:${versions.androidx_constraintlayout}",

            // Image Handling
            glide : "com.github.bumptech.glide:glide:${versions.glide}",
            glide_comiler : "com.github.bumptech.glide:compiler:${versions.glide}",

            // Networking
            retrofit2_converter_moshi : "com.squareup.retrofit2:converter-moshi:${versions.retrofit2}",
            okhttp3_logging_interceptor : "com.squareup.okhttp3:logging-interceptor:${versions.okhttp3}",

            // Log
            timber : "com.jakewharton.timber:timber:${versions.timber}",

            // Coroutines
            coroutines_core : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
            coroutines_android : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}",

            // Koin
            koin_androidx_viewmodel : "org.koin:koin-androidx-viewmodel:${versions.koin}",
            koin_test : "org.koin:koin-test:${versions.koin}",

            // Memory leak detection
            leakcanary_android : "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}",

            // Test
            androidx_test_rules : "androidx.test:rules:${versions.androidx_test}",
            androidx_espresso_core : "androidx.test.espresso:espresso-core:${versions.androidx_espresso}",
            androidx_test_ext_junit : "androidx.test.ext:junit:${versions.androidx_test_ext}",
            robolectric : "org.robolectric:robolectric:${versions.robolectric}",
            android_arch_core_testing : "android.arch.core:core-testing:${versions.arch_core_testing}",
            androidx_fragment_testing : "androidx.fragment:fragment-testing:${versions.androidx_fragment_testing}",
            kotlin_test_junit : "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin_test_junit}",
            mockwebserver : "com.squareup.okhttp3:mockwebserver:${versions.mockwebserver}",
            okhttp3_idling_resource : "com.jakewharton.espresso:okhttp3-idling-resource:${versions.okhttp3_idling_resource}",

            // Mock
            mockk : "io.mockk:mockk:${versions.mockk}"
        ]
    }

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com/' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com/' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
